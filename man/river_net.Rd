% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/river_net.R
\name{river_net}
\alias{river_net}
\title{Create a \code{river_net} Object}
\usage{
river_net(
  rivers,
  barriers,
  outlet,
  poi = NULL,
  invasions = NULL,
  check = TRUE,
  tolerance = NULL
)
}
\arguments{
\item{rivers}{A \code{rivers} object returned by \code{\link[=import_rivers]{import_rivers()}}.}

\item{barriers}{A \code{barriers} object returned by \code{\link[=import_points]{import_points()}} with
\code{type = "bars"}.}

\item{outlet}{An \code{outlet} object returned by \code{\link[=import_points]{import_points()}} with
\code{type = "out"}.}

\item{poi}{An optional \code{poi} object returned by \code{\link[=import_points]{import_points()}} with \code{ type = "poi"}.}

\item{check}{Logical. If \code{TRUE} (default), dendritic topology is enforced
using \code{\link[=enforce_dendritic]{enforce_dendritic()}}.}

\item{tolerance}{A numeric value specifying the snapping distance
(in map units) to align points to the river network. Defaults to \code{NULL},
meaning no snapping.}
}
\value{
An object of class \link{river_net} representing the river network formed
from the provided spatial inputs.
}
\description{
Constructs a \link{river_net} object, a geospatial network structure built on top
of the \code{\link[sfnetworks:sfnetwork]{sfnetworks::sfnetwork()}} class. This object integrates river lines,
barriers, outlets, and optionally points of interest (POIs), allowing for
advanced connectivity analyses with \code{\link[=calculate_dci]{calculate_dci()}} or other network tools.
}
\examples{
\dontrun{
river_net(rivers = river_data, barriers = barrier_data, outlet = outlet_data)
river_net(river_data, barrier_data, outlet_data, poi = poi_data)
river_net(river_data, barrier_data, outlet_data, tolerance = 15)
}
}
